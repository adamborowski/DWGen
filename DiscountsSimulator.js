// Generated by CoffeeScript 1.6.3
(function() {
  var NAME, Utils, dateUtils, dostawcy, fs, genToken, libxmljs, print, save, xml;

  dateUtils = require('date-utils');

  Utils = require('./Utils.js');

  libxmljs = require('libxmljs');

  fs = require('fs');

  xml = libxmljs.parseXmlString(fs.readFileSync('./xmlSource.xml'));

  print = console.log;

  NAME = "discounts.xml";

  save = function() {
    if (fs.exists(NAME)) {
      fs.remove(NAME);
    }
    return fs.writeFile(NAME, xml.toString(), function(err) {
      if (err) {
        return console.log(err);
      } else {
        return console.log("The file was saved to " + NAME);
      }
    });
  };

  genToken = function() {
    var i, str, _i;
    str = "";
    for (i = _i = 1; _i <= 16; i = ++_i) {
      str += String.fromCharCode(65 + Utils.random.integer(26));
    }
    return str;
  };

  dostawcy = {
    uslugi: [],
    znizki: []
  };

  exports.simulate = function(config, erd) {
    var data, daty, from, generuj, i, kategoria, kod, kodyDoWykorzystania, restaurante, restauranteId, to, tokeny, zasieg, znizka, znizki, _i, _j, _k, _len, _len1;
    kodyDoWykorzystania = [];
    restaurante = xml.get('uslugi/firma[@nazwa="Restaurante"]');
    restauranteId = restaurante.attr('id').value();
    znizki = xml.find('znizki/firma/znizka[@firma="' + restauranteId + '"]');
    for (_i = 0, _len = znizki.length; _i < _len; _i++) {
      znizka = znizki[_i];
      daty = znizka.find('oferowane');
      zasieg = new RegExp(znizka.get('zasieg').text());
      kategoria = (erd.Kategoria.filter(function(c) {
        return zasieg.test(c.nazwa);
      }))[0];
      tokeny = znizka.get('tokeny');
      for (_j = 0, _len1 = daty.length; _j < _len1; _j++) {
        data = daty[_j];
        from = data.attr('od').value();
        to = data.attr('do').value();
        generuj = parseInt(data.attr('generuj').value());
        for (i = _k = 1; 1 <= generuj ? _k <= generuj : _k >= generuj; i = 1 <= generuj ? ++_k : --_k) {
          kod = genToken();
          tokeny.node('token').attr({
            kod: kod,
            od: from,
            "do": to
          });
          kodyDoWykorzystania.push({
            kategoria: kategoria,
            token: kod,
            od: new Date(from),
            "do": new Date(to)
          });
        }
      }
    }
    save();
    return kodyDoWykorzystania;
  };

}).call(this);

/*
//@ sourceMappingURL=DiscountsSimulator.map
*/
